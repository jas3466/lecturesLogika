∀n isStudent(n), ∀n canProgram(n)
⊢ ∀n (isStudent(n) ∧ canProgram(n))
{
    1. ∀n isStudent(n)                      premise
    2. ∀n canProgram(n)                     premise
    3. {
        4. a
        5. isStudent(a)                     Ae 1 a
        6. canProgram(a)                    Ae 2 a
        7. isStudent(a) ^ canProgram(a)     ^i 5 6
    }
    8. ∀n (isStudent(n) ∧ canProgram(n))    Ai 3
}
