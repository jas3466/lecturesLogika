import org.sireum.logika._

//inputs can't be 0
def absValue(x: Z): Z = {
    l"""{
        requires x != 0     //precondition
        //modifies
        ensures result > 0  //postcondition (would probably want more for full verification)
    }"""

    var ans: Z = 0
    if (x < 0) {
        ans = -x
    } else {
        ans = x
    }

    return ans
}

////////// Client code ////////////////

val n: Z = readInt()

if (n != 0) {
    val m: Z = absValue(n)

    l"""{
        1. m > 0        premise
    }"""

    //I want to be able to make this assertion
    assert(m > 0)
}